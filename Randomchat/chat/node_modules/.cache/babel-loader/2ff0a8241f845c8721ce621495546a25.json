{"ast":null,"code":"var _jsxFileName = \"/Users/digang/Desktop/app/Randomchat/chat/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:4000');\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    message: ''\n  });\n  const [chat, setChat] = useState([]);\n\n  const renderChat = () => {};\n\n  const rendermyChat = () => {\n    return chat.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \" \\uBB34\\uC57C\\uD64D~ \"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this));\n  };\n\n  const onMessageSubmit = e => {\n    // 해야할것 \n    // 1. 내가 전송할 시 li 하나 추가하기 \n    // 2. 내가 전송하고 난뒤 서버에 메세지보내서, 브로드캐스트 하기.\n    // 3. 매칭하기.\n    // 4. 매칭해서 연결하기..? 시발 어려워~~!~!~!\n    e.preventDefault();\n  };\n\n  const onChange = e => {\n    console.log(e.target.value);\n    setChat(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"titlebar\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"title\",\n          href: \"localhost:3000\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSN5v82ItwB6nsdJENubF-SxHe7XTL1hg7p0A&usqp=CAU\",\n            width: \"319\",\n            height: \"79\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatdiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"chatLog\",\n          children: rendermyChat()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          id: \"sendForm\",\n          onSubmit: onMessageSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            autocomplete: \"off\",\n            onChange: onChange,\n            value: state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\uC804\\uC1A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 84\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IBnqLWQMMI9fAeD7lbDx7xU67ok=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/digang/Desktop/app/Randomchat/chat/src/App.js"],"names":["React","useState","useEffect","logo","io","socket","connect","App","state","setState","message","chat","setChat","renderChat","rendermyChat","map","value","index","onMessageSubmit","e","preventDefault","onChange","console","log","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAACS,IAAAA,OAAO,EAAC;AAAT,GAAD,CAAlC;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMY,UAAU,GAAG,MAAI,CAEtB,CAFD;;AAIA,QAAMC,YAAY,GAAG,MAAI;AACvB,WAAOH,IAAI,CAACI,GAAL,CAAU,CAACC,KAAD,EAAQC,KAAR,kBACf;AAAA;AAAA,OAASA,KAAT;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GAJD;;AAMA,QAAMC,eAAe,GAAIC,CAAD,IAAM;AAC5B;AACA;AACA;AAEA;AACA;AACAA,IAAAA,CAAC,CAACC,cAAF;AAED,GATD;;AAWA,QAAMC,QAAQ,GAAIF,CAAD,IAAM;AACrBG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACK,MAAF,CAASR,KAArB;AACAJ,IAAAA,OAAO,CAACO,CAAC,CAACK,MAAF,CAASR,KAAV,CAAP;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA,+BACE;AAAG,UAAA,EAAE,EAAC,OAAN;AAAc,UAAA,IAAI,EAAC,gBAAnB;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,qGAAT;AAA+G,YAAA,KAAK,EAAC,KAArH;AAA2H,YAAA,MAAM,EAAC;AAAlI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA,gCACE;AAAI,UAAA,EAAE,EAAC,SAAP;AAAA,oBACGF,YAAY;AADf;AAAA;AAAA;AAAA;AAAA,gBADF,eAII;AAAM,UAAA,MAAM,EAAC,EAAb;AAAgB,UAAA,EAAE,EAAC,UAAnB;AAA8B,UAAA,QAAQ,EAAEI,eAAxC;AAAA,kCACE;AAAO,YAAA,YAAY,EAAC,KAApB;AAA0B,YAAA,QAAQ,EAAEG,QAApC;AAA8C,YAAA,KAAK,EAAEb,KAAK,CAACE;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADF,eACuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADvE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAnDQH,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:4000')\n\n\nfunction App() {\n\n  const [state, setState] = useState({message:''})\n  const [chat,setChat] =useState([])\n\n  const renderChat = ()=>{\n\n  }\n\n  const rendermyChat = ()=>{\n    return chat.map( (value, index)=> (\n      <li key={index}> 무야홍~ </li>\n    ))\n  }\n\n  const onMessageSubmit = (e) =>{\n    // 해야할것 \n    // 1. 내가 전송할 시 li 하나 추가하기 \n    // 2. 내가 전송하고 난뒤 서버에 메세지보내서, 브로드캐스트 하기.\n\n    // 3. 매칭하기.\n    // 4. 매칭해서 연결하기..? 시발 어려워~~!~!~!\n    e.preventDefault()\n\n  }\n\n  const onChange = (e) =>{\n    console.log(e.target.value)\n    setChat(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"titlebar\" >\n          <a id=\"title\" href=\"localhost:3000\" >\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSN5v82ItwB6nsdJENubF-SxHe7XTL1hg7p0A&usqp=CAU\" width=\"319\" height=\"79\"/>\n          </a>\n\n        </div>\n        <div id=\"chatdiv\">\n          <ul id=\"chatLog\">\n            {rendermyChat()}\n          </ul>\n            <form action=\"\" id=\"sendForm\" onSubmit={onMessageSubmit}>\n              <input autocomplete=\"off\" onChange={onChange} value={state.message}/><button>전송</button>\n            </form>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}